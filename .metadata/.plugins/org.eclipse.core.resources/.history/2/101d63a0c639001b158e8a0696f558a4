package org.zerock.controller;

import java.text.DateFormat;
import java.util.Date;
import java.util.List;
import java.util.Locale;

import javax.inject.Inject;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.zerock.domain.TestVO;
import org.zerock.mapper.TestMapper;

import com.google.gson.JsonObject;

import lombok.extern.log4j.Log4j;

/**
 * Handles requests for the application home page.
 */
@RestController
@Log4j
public class HomeController {
	
	private static final Logger logger = LoggerFactory.getLogger(HomeController.class);
	private TestMapper mapper;
	
	/**
	 * Simply selects the home view to render by returning its name.
	 */
	@RequestMapping(value = "/", method = RequestMethod.GET)
	public String home(Locale locale, Model model) {
		logger.info("Welcome home! The client locale is {}.", locale);
		
		Date date = new Date();
		DateFormat dateFormat = DateFormat.getDateTimeInstance(DateFormat.LONG, DateFormat.LONG, locale);
		
		String formattedDate = dateFormat.format(date);
		
		model.addAttribute("serverTime", formattedDate );
		
		return "home";
	}

@ResponseBody
	@RequestMapping(value="/all", method=RequestMethod.GET)
	

    public ResponseEntity<List<TestVO>> list() {
	log.info("read");
    	mapper = null;
        ResponseEntity<List<TestVO>> entity = null;
        try {
            entity = new ResponseEntity<>(
                mapper.getList(), HttpStatus.OK);
            
        } catch (Exception e) {
            e.printStackTrace();
            entity = new ResponseEntity<>(HttpStatus.BAD_REQUEST);
        }
        
        return entity;
    }
	    
	
	
	
	
	
	@ResponseBody 
	  @RequestMapping("/test3")
	  public String test3(){
		 
		
		JsonObject obj =new JsonObject();

	    obj.addProperty("title", "테스트3");
	    obj.addProperty("content", "테스트3 내용");

	    JsonObject data = new JsonObject();

	    data.addProperty("time", "12:00");

	    obj.add("data", data);

	    return obj.toString();
	  }

	
}
